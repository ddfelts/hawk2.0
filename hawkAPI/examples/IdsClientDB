#!/usr/bin/python

import sys
import os
import string
from hawkAPI.lib.core.hawkcore import hawkcore 
from hawkAPI.lib.core.hawkapi import hawkapi
from hawkAPI.lib.core.hawklib import hawklib
from hawkAPI.lib.plugins.hawkGraph import hawkGraph
from hawkAPI.lib.plugins.hawkPDF import hawkPDF
import sqlite3 as lite
from operator import itemgetter
import argparse


usage = 'IdsClient -d "database" -l dir -o -a -s'
parser = argparse.ArgumentParser(description="PDF output by client for IDS alerts",epilog=usage)
parser.add_argument("-d","--db",help="Database",type=str,required=True)
parser.add_argument("-l","--dir",help="location to store",type=str,required=True)
parser.add_argument("-o","--logo",help="path to logo",type=str,required=False)
parser.add_argument("-a","--plogo",help="path to page logo",type=str,required=False)
parser.add_argument("-s","--server",help="server",type=str,required=True)
parser.add_argument("-c","--client",help="client",type=str,required=True)

if len(sys.argv) < 4:
    parser.print_help()
    sys.exit()
opt = parser.parse_args()

con = lite.connect(opt.db)
cur = con.cursor()
hawk = hawkcore(opt.server)
graph = hawkGraph()


cur.execute("SELECT * FROM idsalerts")
res = cur.fetchone()
t = res[1]
start =  t[0:10] + " 00:00:00"
end = t[0:10] + " 23:59:59"

cur.execute("SELECT ip_src,count(ip_src) FROM idsalerts group by ip_src ORDER BY count(ip_src) DESC LIMIT 10")
res = cur.fetchall()
main = []
fin = []
for i in res:
    main.append({"title":i[0],
                 "data":int(i[1])})   
    tax = {"ip_src":i[0],
           "ip_src_count":i[1]}
    fin.append(tax)
    tax = ""
graph.HBar("Top_IP_Source",main)

ipdata = fin

#Get Top IP Dst by the group name
main = []
fin = []
cur.execute("SELECT ip_dst,count(ip_dst) FROM idsalerts GROUP BY ip_dst ORDER BY count(ip_dst) DESC LIMIT 10")
res = cur.fetchall()
for i in res:
     main.append({"title":i[0],
                 "data":int(i[1])})
     tax = {"ip_dst":i[0],
            "ip_dst_count":i[1]}
     fin.append(tax)
     tax = ""
graph.Pie("Top_IP_Dst",main)
dstdata = fin

#Get Top alerts by group name
main = []
fin = []
cur.execute("SELECT alert_name,count(alert_name) FROM idsalerts GROUP BY alert_name ORDER BY count(alert_name) DESC LIMIT 10")
res = cur.fetchall()
for i in res:
    main.append({"title":i[0],
                 "data":int(i[1])})
    tax = {"alert_name":i[0],
           "alert_name_count":i[1]}
    fin.append(tax)
    tax=""
graph.HBar("Top_Ten_Alerts",main)
adata = fin
hawk.logout()

nameit = opt.dir + opt.client + "-ids.pdf"
doc = hawkPDF(nameit,hawk)
#doc.setPageLetter()
doc.setTitle("Client Top Ten IDS Report")
doc.setDate(str(start),str(end))
doc.setClientName(opt.client)
if opt.logo:
   doc.setClientImage(opt.logo)
if opt.plogo:
   doc.setPageImage(opt.plogo)
doc.addPageBreak()

doc.createToc()

doc.addStoryTitle("Top Ten IP Sources")
doc.addStory("Top ten IP sources outlines the top ten source IP addresses creating alerts.")
doc.addImage("%s/Top_IP_Source.png" % graph.getDir(),450,200)
keys = ["ip_src","ip_src_count"]
doc.addTable(ipdata,nkeys=keys)
doc.addPageBreak()

doc.addStoryTitle("Top Ten Destinations")
doc.addStory("Top ten IP destination outlines the top ten targets being attacked or causing alerts on the network.")
doc.addImage("%s/Top_IP_Dst.png" % graph.getDir(),450,200)
keys = ["ip_dst","ip_dst_count"]
doc.addTable(dstdata,nkeys=keys)
doc.addPageBreak()


doc.addStoryTitle("Top Ten Alerts")
doc.addStory("This information displays the top ten alerts that are present and that have been seen in the current enviroment")
doc.addImage("%s/Top_Ten_Alerts.png" % graph.getDir(),450,200)
keys = ["alert_name","alert_name_count"]
doc.addTable(adata,nkeys=keys)
doc.addPageBreak()

doc.savePdf()
graph.removeDir() 
sys.exit(1)
